/* The isBadVersion API is defined in the parent class VersionControl.
      boolean isBadVersion(int version); */

public class Solution extends VersionControl {
    public int firstBadVersion(int n) {
    long l=0;
    long r=n-1;
    int mid;
    while(l<=r){
        mid=(int)((l+r)/2);
        if(!isBadVersion(mid+1)){
            l=mid+1;
        }
        else{
            r=mid-1;
        }
    }
    return (int)(l+1);
    }
}

/* The isBadVersion API is defined in the parent class VersionControl.
      boolean isBadVersion(int version); */

public class Solution extends VersionControl {
    public int firstBadVersion(int n) {
    long l=1;
    long r=n;
    int mid;
    while(l<=r){
        mid=(int)((l+r)/2);
        if(!isBadVersion(mid)){
            l=mid+1;
        }
        else{
            r=mid-1;
        }
    }
    return (int)l;
    }
}

//does not use long
/* The isBadVersion API is defined in the parent class VersionControl.
      boolean isBadVersion(int version); */

public class Solution extends VersionControl {
    public int firstBadVersion(int n) {
    int l=1;
    int r=n;
    int mid;
    while(l<=r){
        mid=l+(r-l)/2;
        if(!isBadVersion(mid)){
            l=mid+1;
        }
        else{
            r=mid-1;
        }
    }
    return l;
    }
}