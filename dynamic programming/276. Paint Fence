public class Solution {
    public int numWays(int n, int k) {
    if(n==0||(k==1&&n>2)){
        return 0;
    }
    int undup=k,dup=0;
    for(int i=1;i<=n-1;++i){
        int temp=undup;
        undup=(k-1)*(undup+dup);
        dup=temp;
    }
    return (undup+dup);
    }
}

//Top solusion
//w(n) = (k - 1) * (w(n - 1) + w(n - 2))
public class Solution {
    public int numWays(int n, int k) {
        if ((n == 0 || k == 0) || (k == 1 && n >= 3))
            return 0;
        int w1 = k;
        int w2 = k * k;
        int w3; 
        if (n == 1)
            return w1;
        if (n == 2)
            return w2;
        for (int i = 0; i <= n - 3; i++) {
            w3 = (k - 1) * (w2 + w1);
            w1 = w2;
            w2 = w3;
        }
        return w2; // wrong if you return w3, w3 may not be initialized.
    }
}